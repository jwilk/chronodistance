#!/usr/bin/env python
# encoding=UTF-8

# Copyright Â© 2011-2024 Jakub Wilk <jwilk@jwilk.net>
# SPDX-License-Identifier: MIT

import argparse
import datetime
import os
import subprocess as ipc

import webhelpers.date as datehelper

granularities = [
    'century',
    'decade',
    'year',
    'month',
    'day',
    'hour',
    'minute',
    'second',
]

def parse_timestamp(ts=None):
    if ts is None:
        # Shortcut:
        return datetime.datetime.utcnow()
    args = ['date', '--date={0}'.format(ts), '+%s']
    child = ipc.Popen(args, stdout=ipc.PIPE, stderr=ipc.PIPE)
    stdout, stderr = child.communicate()
    if stderr:
        stderr = stderr.decode('ASCII')
        raise ValueError('Cannot parse date: {stderr}'.format(stderr=stderr))
    stdout = stdout.decode('ASCII')
    return datetime.datetime.utcfromtimestamp(int(stdout))

def main():
    os.environ['LC_ALL'] = 'C'
    parser = argparse.ArgumentParser()
    parser.add_argument('-g', dest='granularity', choices=granularities, default='minute')
    parser.add_argument('src', metavar='SRC')
    parser.add_argument('dst', metavar='DST', nargs='?')
    options = parser.parse_args()
    src = parse_timestamp(options.src)
    dst = parse_timestamp(options.dst)
    print(datehelper.distance_of_time_in_words(
        from_time=src, to_time=dst,
        granularity=options.granularity
    ))

if __name__ == '__main__':
    main()

# vim:ts=4 sts=4 sw=4 et
